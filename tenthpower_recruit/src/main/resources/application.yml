server:
    port: 9002

eureka:
    client:
        enabled: true
        healthcheck:
            enabled: true
        fetch-registry: true
        # 打开自我保护模式（缺省为打开）
        register-with-eureka: true
        # 复制实例变化信息到eureka服务器所需要的时间间隔（s），默认为30秒
        instance-info-replication-interval-seconds: 10
        # 从eureka服务器注册表中获取注册信息的时间间隔（s），默认为30秒
        registry-fetch-interval-seconds: 10
        service-url:
            defaultZone: http://134.175.91.16:10000/eureka/
    instance:
        appname: tenthpower-recruit
        prefer-ip-address: true
        ip-address: 134.175.91.16
        instanceId: tenthpower-recruit:${spring.application.instance-id:${random.value}}
        # eureka客户需要多长时间发送心跳给eureka服务器，表明它仍然活着,默认为30 秒
        lease-renewal-interval-in-seconds: 30
        # Eureka服务器在接收到实例的最后一次发出的心跳后，需要等待多久才可以将此实例删除，默认为90秒
        lease-expiration-duration-in-seconds: 90
ribbon: #参考地址：http://blog.didispace.com/spring-cloud-ribbon-failed-retry/，http://blog.csdn.net/dream_broken/article/details/76973834
    eureka:
        enabled: true
    ConnectTimeout: 1000000 #ribbon请求连接的超时时间毫秒
    ReadTimeout: 1000000 #请求处理的超时时间 毫秒
    OkToRetryOnAllOperations: true #对所有请求操作都进行重试
    # 每台服务器最多重试次数，但是首次调用不包括在内
    MaxAutoRetries: 2 #对当前服务的重试次数（第一次分配给9082的时候，如果404，则再重试MaxAutoRetries次，如果还是404，则切换到其他服务MaxAutoRetriesNextServer决定）
    # 最多重试多少台服务器
    MaxAutoRetriesNextServer: 3 #切换服务的次数(比如本次请求分配给9082处理，发现404，则切换分配给9081处理，如果还是404，则返回404给客户端）


spring:
    application:
        name: tenthpower-recruit
    datasource:
        driverClassName: com.mysql.jdbc.Driver
        url: jdbc:mysql://134.175.91.16:3306/tensquare_recruit?characterEncoding=utf-8
        username: root
        password: h123456
        type: com.alibaba.druid.pool.DruidDataSource
        initialSize: 5
        minIdle: 5
        maxActive: 20
    jpa:
        database: MySQL
        show‐sql: true
        generate‐ddl: true